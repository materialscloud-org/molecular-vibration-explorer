# -*- coding: utf-8 -*-
"""
Created on Wed Jun  9 11:37:31 2021

@author: Zsuzsanna Koczor-Benda, UCL
"""

import numpy as np
import math

def full_average_IR(d):
    full_av=(math.pow(d[0],2) + math.pow(d[1],2) + math.pow(d[2],2))/3
    return full_av

def full_average_R_pol(p,e_in,e_out):
    w1,w2,w3=e_in
    x1,x2,x3=e_out
    a11=p[0,0]
    a12=p[0,1]
    a13=p[0,2]
    a22=p[1,1]
    a23=p[1,2]
    a33=p[2,2]
    aux0=(6.*(w1*(x1*((w2*x2)+(w3*x3)))))+((w1**2)*(((2.*(x1**2))-(x3**2))-(x2**2)));
    aux1=((6.*(w2*(w3*(x2*x3))))+aux0)-((w2**2)*((x1**2)+((-2.*(x2**2))+(x3**2))));
    aux2=((w2**2)*((x1**2)+((3.*(x2**2))+(x3**2))))+((w3**2)*((x1**2)+((x2**2)+(3.*(x3**2)))));
    aux3=(4.*(w1*(x1*((w2*x2)+(w3*x3)))))+(((w1**2)*((3.*(x1**2))+((x2**2)+(x3**2))))+aux2);
    aux4=((w3**2)*((3.*(x1**2))+((3.*(x2**2))+(4.*(x3**2)))))+((w1**2)*((4.*(x1**2))+(3.*((x2**2)+(x3**2)))));
    aux5=(2.*(w1*(x1*((w2*x2)+(w3*x3)))))+(((w2**2)*((3.*(x1**2))+((4.*(x2**2))+(3.*(x3**2)))))+aux4);
    aux6=((a11**2)*((4.*(w2*(w3*(x2*x3))))+aux3))+((a12**2)*((2.*(w2*(w3*(x2*x3))))+aux5));
    aux7=(a11*((a22+a33)*(aux1-((w3**2)*((x1**2)+((x2**2)+(-2.*(x3**2))))))))+aux6;
    aux8=(2.*(a22*(a33*((w3**2)*(x3**2)))))+((3.*((a33**2)*((w3**2)*(x3**2))))+aux7);
    aux9=(3.*((a22**2)*((w3**2)*(x3**2))))+((4.*((a23**2)*((w3**2)*(x3**2))))+aux8);
    aux10=(3.*((a23**2)*((w2**2)*(x3**2))))+(((a33**2)*((w2**2)*(x3**2)))+((4.*((a13**2)*((w3**2)*(x3**2))))+aux9));
    aux11=((a33**2)*((w1**2)*(x3**2)))+((3.*((a13**2)*((w2**2)*(x3**2))))+(((a22**2)*((w2**2)*(x3**2)))+aux10));
    aux12=(3.*((a13**2)*((w1**2)*(x3**2))))+(((a22**2)*((w1**2)*(x3**2)))+((3.*((a23**2)*((w1**2)*(x3**2))))+aux11));
    aux13=(6.*(a22*(a33*(w2*(w3*(x2*x3))))))+((4.*((a33**2)*(w2*(w3*(x2*x3)))))+aux12);
    aux14=(4.*((a22**2)*(w2*(w3*(x2*x3)))))+((2.*((a23**2)*(w2*(w3*(x2*x3)))))+aux13);
    aux15=(4.*((a33**2)*(w1*(w3*(x1*x3)))))+((2.*((a13**2)*(w2*(w3*(x2*x3)))))+aux14);
    aux16=(2.*((a23**2)*(w1*(w3*(x1*x3)))))+((6.*(a22*(a33*(w1*(w3*(x1*x3))))))+aux15);
    aux17=(2.*((a13**2)*(w1*(w3*(x1*x3)))))+((4.*((a22**2)*(w1*(w3*(x1*x3)))))+aux16);
    aux18=((a22**2)*((w3**2)*(x2**2)))+((3.*((a23**2)*((w3**2)*(x2**2))))+(((a33**2)*((w3**2)*(x2**2)))+aux17));
    aux19=(3.*((a33**2)*((w2**2)*(x2**2))))+((3.*((a13**2)*((w3**2)*(x2**2))))+aux18);
    aux20=(4.*((a23**2)*((w2**2)*(x2**2))))+((2.*(a22*(a33*((w2**2)*(x2**2)))))+aux19);
    aux21=(4.*((a13**2)*((w2**2)*(x2**2))))+((3.*((a22**2)*((w2**2)*(x2**2))))+aux20);
    aux22=((a22**2)*((w1**2)*(x2**2)))+((3.*((a23**2)*((w1**2)*(x2**2))))+(((a33**2)*((w1**2)*(x2**2)))+aux21));
    aux23=(4.*((a33**2)*(w1*(w2*(x1*x2)))))+((3.*((a13**2)*((w1**2)*(x2**2))))+aux22);
    aux24=(2.*((a23**2)*(w1*(w2*(x1*x2)))))+((6.*(a22*(a33*(w1*(w2*(x1*x2))))))+aux23);
    aux25=(2.*((a13**2)*(w1*(w2*(x1*x2)))))+((4.*((a22**2)*(w1*(w2*(x1*x2)))))+aux24);
    aux26=((a22**2)*((w3**2)*(x1**2)))+((3.*((a23**2)*((w3**2)*(x1**2))))+(((a33**2)*((w3**2)*(x1**2)))+aux25));
    aux27=(3.*((a23**2)*((w2**2)*(x1**2))))+(((a33**2)*((w2**2)*(x1**2)))+((3.*((a13**2)*((w3**2)*(x1**2))))+aux26));
    aux28=(3.*((a33**2)*((w1**2)*(x1**2))))+((3.*((a13**2)*((w2**2)*(x1**2))))+(((a22**2)*((w2**2)*(x1**2)))+aux27));
    aux29=(4.*((a23**2)*((w1**2)*(x1**2))))+((2.*(a22*(a33*((w1**2)*(x1**2)))))+aux28);
    aux30=(4.*((a13**2)*((w1**2)*(x1**2))))+((3.*((a22**2)*((w1**2)*(x1**2))))+aux29);
    aux31=((aux30-(a22*(a33*((w2**2)*(x3**2)))))-(a22*(a33*((w1**2)*(x3**2)))))-(a22*(a33*((w3**2)*(x2**2))));
    aux32=((aux31-(a22*(a33*((w1**2)*(x2**2)))))-(a22*(a33*((w3**2)*(x1**2)))))-(a22*(a33*((w2**2)*(x1**2))));
    output=0.0666667*aux32;
    return output

def full_average_conv_aaa(d,p):
    m1=d[0]
    m2=d[1]
    m3=d[2]
    a11=p[0,0]
    a12=p[0,1]
    a13=p[0,2]
    a22=p[1,1]
    a23=p[1,2]
    a33=p[2,2]
    aux0=(4.*(a13**2))+((a22**2)+((4.*(a23**2))+((2.*(a22*a33))+(5.*(a33**2)))));
    aux1=(a22*((3.*((m1**2)+(m2**2)))+(m3**2)))+(a33*((3.*(m1**2))+((m2**2)+(3.*(m3**2)))));
    aux2=a11*((4.*((3.*(a12*(m1*m2)))+((3.*(a13*(m1*m3)))+(a23*(m2*m3)))))+aux1);
    aux3=(3.*((a11**2)*((5.*(m1**2))+((m2**2)+(m3**2)))))+((4.*((a12**2)*((3.*((m1**2)+(m2**2)))+(m3**2))))+(2.*aux2));
    aux4=(8.*(a12*((((3.*a22)+a33)*(m1*m2))+(2.*(((a23*m1)+(a13*m2))*m3)))))+aux3;
    aux5=(8.*(((a13*((a22+(3.*a33))*m1))+(3.*(a23*((a22+a33)*m2))))*m3))+((3.*(aux0*(m3**2)))+aux4);
    aux6=(12.*((a23**2)*(m2**2)))+((6.*(a22*(a33*(m2**2))))+((3.*((a33**2)*(m2**2)))+aux5));
    aux7=(16.*(a13*(a23*(m1*m2))))+((4.*((a13**2)*(m2**2)))+((15.*((a22**2)*(m2**2)))+aux6));
    aux8=(4.*((a23**2)*(m1**2)))+((2.*(a22*(a33*(m1**2))))+((3.*((a33**2)*(m1**2)))+aux7));
    output=0.00952381*((12.*((a13**2)*(m1**2)))+((3.*((a22**2)*(m1**2)))+aux8));
    return output

def full_average_conv_baa(d,p):
    m1=d[0]
    m2=d[1]
    m3=d[2]
    a11=p[0,0]
    a12=p[0,1]
    a13=p[0,2]
    a22=p[1,1]
    a23=p[1,2]
    a33=p[2,2]
    aux0=(a13*(((3.*a11)+(a22+(3.*a33)))*m1))+((2.*(a12*(a13*m2)))+(a23*((a11+(3.*(a22+a33)))*m2)));
    aux1=(6.*(a11*a22))+((9.*(a22**2))+((8.*(a23**2))+((4.*((a11+a22)*a33))+(3.*(a33**2)))));
    aux2=(-4.*(((2.*(a12*(a23*m1)))+aux0)*m3))+(((9.*(a11**2))+((12.*(a12**2))+((8.*(a13**2))+aux1)))*(m3**2));
    aux3=(6.*(a11*(a33*(m2**2))))+((4.*(a22*(a33*(m2**2))))+((9.*((a33**2)*(m2**2)))+aux2));
    aux4=(4.*(a11*(a22*(m2**2))))+((3.*((a22**2)*(m2**2)))+((8.*((a23**2)*(m2**2)))+aux3));
    aux5=(9.*((a11**2)*(m2**2)))+((8.*((a12**2)*(m2**2)))+((12.*((a13**2)*(m2**2)))+aux4));
    aux6=(-12.*(a12*(a22*(m1*m2))))+((-8.*(a13*(a23*(m1*m2))))+((-4.*(a12*(a33*(m1*m2))))+aux5));
    aux7=(6.*(a22*(a33*(m1**2))))+((9.*((a33**2)*(m1**2)))+((-12.*(a11*(a12*(m1*m2))))+aux6));
    aux8=(9.*((a22**2)*(m1**2)))+((12.*((a23**2)*(m1**2)))+((4.*(a11*(a33*(m1**2))))+aux7));
    aux9=(8.*((a12**2)*(m1**2)))+((8.*((a13**2)*(m1**2)))+((4.*(a11*(a22*(m1**2))))+aux8));
    output=0.00952381*((3.*((a11**2)*(m1**2)))+aux9);
    return output

def full_average_conv_aab(d,p):
    m1=d[0]
    m2=d[1]
    m3=d[2]
    a11=p[0,0]
    a12=p[0,1]
    a13=p[0,2]
    a22=p[1,1]
    a23=p[1,2]
    a33=p[2,2]
    aux0=(8.*(a13**2))+((2.*(a22**2))+((8.*(a23**2))+((-3.*(a22*a33))+(3.*(a33**2)))));
    aux1=((a12**2)*((8.*((m1**2)+(m2**2)))+(5.*(m3**2))))+((a11**2)*((3.*(m1**2))+(2.*((m2**2)+(m3**2)))));
    aux2=(2.*(((a13*(((-2.*a22)+a33)*m1))+(a23*((a22+a33)*m2)))*m3))+((aux0*(m3**2))+aux1);
    aux3=(-3.*(a22*(a33*(m2**2))))+((2.*((a33**2)*(m2**2)))+((6.*(a12*(((a23*m1)+(a13*m2))*m3)))+aux2));
    aux4=(5.*((a13**2)*(m2**2)))+((3.*((a22**2)*(m2**2)))+((8.*((a23**2)*(m2**2)))+aux3));
    aux5=(2.*((a33**2)*(m1**2)))+((6.*(a13*(a23*(m1*m2))))+((2.*(a12*((a22+(-2.*a33))*(m1*m2))))+aux4));
    aux6=(8.*((a13**2)*(m1**2)))+((2.*((a22**2)*(m1**2)))+((5.*((a23**2)*(m1**2)))+aux5));
    aux7=(4.*(a23*(m2*m3)))+((3.*(a33*(m3**2)))+(a22*((3.*((m1**2)+(m2**2)))+(m3**2))));
    aux8=(3.*(a33*(m1**2)))+((-2.*(a12*(m1*m2)))+((a33*(m2**2))+((-2.*(a13*(m1*m3)))+aux7)));
    output=0.00952381*((aux6-(a11*aux8))-(a22*(a33*(m1**2))));
    return output

def full_average_conv_abc(d,p):
    m1=d[0]
    m2=d[1]
    m3=d[2]
    a11=p[0,0]
    a12=p[0,1]
    a13=p[0,2]
    a22=p[1,1]
    a23=p[1,2]
    a33=p[2,2]
    aux0=(((5.*(a13**2))+((3.*(a22**2))+((5.*(a23**2))+(a33**2))))-(a22*a33))*(m3**2);
    aux1=((a12**2)*((5.*((m1**2)+(m2**2)))+(11.*(m3**2))))+((a11**2)*((m1**2)+(3.*((m2**2)+(m3**2)))));
    aux2=(-4.*(a12*(((a22+(-2.*a33))*(m1*m2))+(3.*(((a23*m1)+(a13*m2))*m3)))))+aux1;
    aux3=(4.*(a13*(((2.*a22)-a33)*(m1*m3))))+((-4.*(a23*((a22+a33)*(m2*m3))))+(aux0+aux2));
    aux4=((a22**2)*(m2**2))+((5.*((a23**2)*(m2**2)))+((3.*((a33**2)*(m2**2)))+aux3));
    aux5=(3.*((a33**2)*(m1**2)))+((-12.*(a13*(a23*(m1*m2))))+((11.*((a13**2)*(m2**2)))+aux4));
    aux6=(3.*((a22**2)*(m1**2)))+((11.*((a23**2)*(m1**2)))+((-5.*(a22*(a33*(m1**2))))+aux5));
    aux7=(a33*((m1**2)+((5.*(m2**2))+(m3**2))))+(a22*((m1**2)+((m2**2)+(5.*(m3**2)))));
    aux8=((5.*((a13**2)*(m1**2)))+aux6)-(a11*((4.*((a12*(m1*m2))+((a13*(m1*m3))+(-2.*(a23*(m2*m3))))))+aux7));
    output=0.00952381*(aux8-(a22*(a33*(m2**2))));
    return output

def full_average_conv_pol(d,p,e,e_in,e_out):
    ir_r_in=int(np.dot(e,e_in))
    ir_r_out=int(np.dot(e,e_out))
    r_in_r_out=int(np.dot(e_in,e_out))
    if ir_r_in and r_in_r_out:
        output=full_average_conv_aaa(d,p)
    elif ir_r_in==0 and r_in_r_out==0 and ir_r_out==0:
        output=full_average_conv_abc(d,p)
    elif r_in_r_out:
        output=full_average_conv_baa(d,p)
    else:
        output=full_average_conv_aab(d,p)
    return output

    